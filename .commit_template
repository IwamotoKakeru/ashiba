type(影響範囲): 件名

### type
# 以下のいずれかから選択:
# feat: 新機能の実装・スタイルの付与
# fix: 表示崩れ・バグ・不具合等の修正
# build: ビルドシステムまたは外部の依存関係に影響を及ぼす変更(例: gulp, broccoli, npm等)
# perf:パフォーマンスを向上させるコードの変更
# refactor: バグ修正や機能追加を含まないコードの変更、実装方法の変更
# docs: ドキュメントのみの変更 (例:コメント,TSDoc等)
# ci: CI設定ファイルやスクリプトの変更 (例: CircleCi, SauceLabs等)
# test: 不足しているテストの追加や既存のテストの修正
# chore: コアコード以外のコード (test,story等 ※*最新のangularでは廃止*)

### 影響範囲
#コミットの変更箇所を記載、変更したファイル名や上位のディレクトリ名等を記載、無理に記載しなくてもよい

#### Summary
# 現在型を用いて簡潔に述べる
# (.)や(。)で終わらない
# このコミットを適用した際にどうなるのかを簡潔に説明する
#❌悪い例: Propsを受け取った際の挙動を実装
#⭕️良い例: Propsを受け取った際にコンポーネントの色をPropsに応じて変更するように実装

### Body
#変更を行なった動機やなぜこの変更を行うのかを記載する
#Summaryと同じように現在形を用いて簡潔に述べる
#小さな変更だと記載しなくても良い